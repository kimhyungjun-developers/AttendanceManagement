// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.DataContext;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(SQLServerDataContext))]
    [Migration("20220215005929_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Model.Tables.ApprovalFlow", b =>
                {
                    b.Property<string>("ApprovalFlowID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ApprovalOrder")
                        .HasColumnType("int");

                    b.Property<string>("ApproverID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApprovalFlowID");

                    b.HasIndex("ApproverID");

                    b.HasIndex("GroupID");

                    b.ToTable("ApprovalFlows");
                });

            modelBuilder.Entity("Model.Tables.ApprovalHistory", b =>
                {
                    b.Property<string>("ApprovalHistoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("ApproverID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AttendanceMonthID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApprovalHistoryID");

                    b.HasIndex("ApproverID");

                    b.HasIndex("AttendanceMonthID");

                    b.ToTable("ApprovalHistories");
                });

            modelBuilder.Entity("Model.Tables.AttendanceDetail", b =>
                {
                    b.Property<string>("AttendanceDetailID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan?>("ActualTime")
                        .HasColumnType("time");

                    b.Property<string>("AttendanceMonthID1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("MidnightTime")
                        .HasColumnType("time");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("OverTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("RestTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeekdayDivision")
                        .HasColumnType("int");

                    b.Property<int>("WorkDivisionID")
                        .HasColumnType("int");

                    b.HasKey("AttendanceDetailID");

                    b.HasIndex("AttendanceMonthID1");

                    b.ToTable("AttendanceDetails");
                });

            modelBuilder.Entity("Model.Tables.AttendanceMonth", b =>
                {
                    b.Property<string>("AttendanceMonthID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AttendanceMonthID");

                    b.HasIndex("UserID");

                    b.ToTable("AttendanceMonths");
                });

            modelBuilder.Entity("Model.Tables.Authentication", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Authentications");

                    b.HasData(
                        new
                        {
                            UserID = "1",
                            CreateProgram = "",
                            CreateUser = "",
                            Password = "JpIVUgauxYdYTieOcICaf58RV51021q/d0piw2RNIVY=",
                            PasswordSalt = "/CiBj6zceZn63k3rUF90fCW5Jg1knd9TCwarIgHB6gQ=",
                            UpdateProgram = "",
                            UpdateUser = ""
                        },
                        new
                        {
                            UserID = "2",
                            CreateProgram = "",
                            CreateUser = "",
                            Password = "JpIVUgauxYdYTieOcICaf58RV51021q/d0piw2RNIVY=",
                            PasswordSalt = "/CiBj6zceZn63k3rUF90fCW5Jg1knd9TCwarIgHB6gQ=",
                            UpdateProgram = "",
                            UpdateUser = ""
                        });
                });

            modelBuilder.Entity("Model.Tables.Authority", b =>
                {
                    b.Property<int>("AuthorityID")
                        .HasColumnType("int");

                    b.Property<string>("AuthorityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorityID");

                    b.ToTable("Authorities");

                    b.HasData(
                        new
                        {
                            AuthorityID = 1,
                            AuthorityName = "一般",
                            CreateProgram = "",
                            CreateUser = "",
                            UpdateProgram = "",
                            UpdateUser = ""
                        },
                        new
                        {
                            AuthorityID = 2,
                            AuthorityName = "管理者",
                            CreateProgram = "",
                            CreateUser = "",
                            UpdateProgram = "",
                            UpdateUser = ""
                        });
                });

            modelBuilder.Entity("Model.Tables.Group", b =>
                {
                    b.Property<string>("GroupID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupID");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupID = "1",
                            CreateProgram = "",
                            CreateUser = "",
                            GroupName = "グループ名",
                            UpdateProgram = "",
                            UpdateUser = ""
                        });
                });

            modelBuilder.Entity("Model.Tables.Holiday", b =>
                {
                    b.Property<string>("HolidayID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("HolidayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HolidayID");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("Model.Tables.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AuthorityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("DefaultEndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("DefaultRestTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("DefaultStartTime")
                        .HasColumnType("time");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNameFurigana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastNameFurigana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("AuthorityID");

                    b.HasIndex("EmployeeNumber")
                        .IsUnique();

                    b.HasIndex("GroupID");

                    b.HasIndex("MailAddress")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = "1",
                            AuthorityID = 1,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            EmployeeNumber = "1",
                            FirstName = "太郎",
                            FirstNameFurigana = "",
                            GroupID = "1",
                            LastName = "山田",
                            LastNameFurigana = "",
                            MailAddress = "general@example.com",
                            UpdateProgram = "",
                            UpdateUser = ""
                        },
                        new
                        {
                            UserID = "2",
                            AuthorityID = 2,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            EmployeeNumber = "2",
                            FirstName = "太郎",
                            FirstNameFurigana = "",
                            GroupID = "1",
                            LastName = "山田",
                            LastNameFurigana = "",
                            MailAddress = "admin@example.com",
                            UpdateProgram = "",
                            UpdateUser = ""
                        });
                });

            modelBuilder.Entity("Model.Tables.WorkDivision", b =>
                {
                    b.Property<int>("WorkDivisionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedInputTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkDivisionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkDivisionID");

                    b.ToTable("WorkDivisions");

                    b.HasData(
                        new
                        {
                            WorkDivisionID = 1,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = true,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "通常勤務"
                        },
                        new
                        {
                            WorkDivisionID = 2,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = false,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "有給休暇"
                        },
                        new
                        {
                            WorkDivisionID = 3,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = true,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "半休"
                        },
                        new
                        {
                            WorkDivisionID = 4,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = false,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "欠勤"
                        },
                        new
                        {
                            WorkDivisionID = 5,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = true,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "休日出勤"
                        },
                        new
                        {
                            WorkDivisionID = 6,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = false,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "代休"
                        },
                        new
                        {
                            WorkDivisionID = 7,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = false,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "夏期休暇"
                        },
                        new
                        {
                            WorkDivisionID = 8,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = false,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "年末年始"
                        },
                        new
                        {
                            WorkDivisionID = 9,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = true,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "健康診断"
                        },
                        new
                        {
                            WorkDivisionID = 10,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = true,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "夜勤明け"
                        },
                        new
                        {
                            WorkDivisionID = 11,
                            CreateProgram = "",
                            CreateUser = "",
                            Deleted = false,
                            NeedInputTime = false,
                            UpdateProgram = "",
                            UpdateUser = "",
                            WorkDivisionName = "休業"
                        });
                });

            modelBuilder.Entity("Model.Tables.ApprovalFlow", b =>
                {
                    b.HasOne("Model.Tables.User", "Approver")
                        .WithMany("ApprovalFlow")
                        .HasForeignKey("ApproverID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Tables.Group", "Group")
                        .WithMany("ApprovalFlow")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Model.Tables.ApprovalHistory", b =>
                {
                    b.HasOne("Model.Tables.User", "Approver")
                        .WithMany("ApprovalHistory")
                        .HasForeignKey("ApproverID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Tables.AttendanceMonth", "AttendanceMonth")
                        .WithMany("ApprovalHistory")
                        .HasForeignKey("AttendanceMonthID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("AttendanceMonth");
                });

            modelBuilder.Entity("Model.Tables.AttendanceDetail", b =>
                {
                    b.HasOne("Model.Tables.AttendanceMonth", "AttendanceMonth")
                        .WithMany("AttendanceDetail")
                        .HasForeignKey("AttendanceMonthID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceMonth");
                });

            modelBuilder.Entity("Model.Tables.AttendanceMonth", b =>
                {
                    b.HasOne("Model.Tables.User", "User")
                        .WithMany("AttendanceMonth")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Authentication", b =>
                {
                    b.HasOne("Model.Tables.User", "User")
                        .WithOne("Authentication")
                        .HasForeignKey("Model.Tables.Authentication", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.User", b =>
                {
                    b.HasOne("Model.Tables.Authority", "Authority")
                        .WithMany("User")
                        .HasForeignKey("AuthorityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Tables.Group", "Group")
                        .WithMany("User")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Authority");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Model.Tables.AttendanceMonth", b =>
                {
                    b.Navigation("ApprovalHistory");

                    b.Navigation("AttendanceDetail");
                });

            modelBuilder.Entity("Model.Tables.Authority", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Group", b =>
                {
                    b.Navigation("ApprovalFlow");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.User", b =>
                {
                    b.Navigation("ApprovalFlow");

                    b.Navigation("ApprovalHistory");

                    b.Navigation("AttendanceMonth");

                    b.Navigation("Authentication")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
